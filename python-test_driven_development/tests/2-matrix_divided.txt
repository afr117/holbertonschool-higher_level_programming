# Test cases for matrix_divided function
"""This module contains the add_integer function."""

# Import the matrix_divided function from the module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: Divide matrix elements by 3
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Attempt to divide by zero
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Test case 3: Non-integer/float element in the matrix
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, "six"]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 4: Rows of different sizes
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6, 7]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
ValueError: Each row of the matrix must have the same size

# Test case 5: Non-matrix input
>>> matrix_divided(None, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 6: Non-numeric divisor
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, "two")
Traceback (most recent call last):
...
TypeError: div must be a number

